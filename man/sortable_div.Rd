% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sortable_div.R
\name{sortable_div}
\alias{sortable_div}
\title{Create a div with sortable elements.}
\usage{
sortable_div(
  ...,
  inputId,
  class = NULL,
  style = NULL,
  group = NULL,
  sort = TRUE,
  delay = 0,
  delayOnTouchOnly = FALSE,
  multiDrag = NULL,
  touchStartThreshold = 0,
  removeOnSpill = FALSE,
  disabled = FALSE,
  store = NULL,
  animation = 150,
  easing = "cubic-bezier(1, 0, 0, 1)",
  handle = NULL,
  filter = NULL,
  preventOnFilter = TRUE,
  draggable = NULL,
  dataIdAttr = "data-id",
  ghostClass = NULL,
  chosenClass = NULL,
  dragClass = NULL,
  selectedClass = NULL,
  swapThreshold = 1,
  invertSwap = TRUE,
  invertedSwapThreshold = 0.5,
  direction = "horizontal",
  swap = NULL,
  swapClass = NULL,
  forceFallback = FALSE,
  fallbackClass = "sortable-fallback",
  fallbackOnBody = FALSE,
  fallbackTolerance = 0,
  dragoverBubble = FALSE,
  removeCloneOnHide = TRUE,
  multiDragKey = NULL,
  emptyInsertThreshold = 5,
  onChoose = NULL,
  onUnchoose = NULL,
  onStart = NULL,
  onEnd = NULL,
  onAdd = NULL,
  onUpdate = NULL,
  onSort = NULL,
  onRemove = NULL,
  onFilter = NULL,
  onMove = NULL,
  onClone = NULL,
  onChange = NULL,
  onSelect = NULL,
  onDeselect = NULL
)
}
\arguments{
\item{...}{innerHTML (sortable items)}

\item{inputId}{[string] shiny input id and id of outer div.}

\item{class}{[character(1)] outer div class}

\item{style}{[character(1)] outer div style}

\item{group}{group name from sharable lists. name or list(name,pull=[true|false|["foo", "bar"]|'clone'|function],put=[true|false|["foo", "bar"]|'clone'|function]],revertClone=[true|false])}

\item{sort}{[logical] Is the list sortable? Defaults to TRUE.}

\item{delay}{[number] ms, Drag delay.}

\item{delayOnTouchOnly}{[logical] Use Drag delay on mobile/touch devices. Defaults to FALSE.}

\item{removeOnSpill}{[logical]  Remove item on spill. Defaults to FALSE.}

\item{disabled}{[logical] Disables the sortable if set to true. Defaults to FALSE.}

\item{store}{#see Store on sortable.js github.}

\item{animation}{[number] ms, animation speed moving items when sorting, `0` â€” without animation. Defaults to 150.}

\item{handle}{[string (css class)] Drag handle selector within list items. Defaults to NULL.}

\item{filter}{[string (css class)] Selectors that do not lead to dragging (String or Function). Defaults to NULL.}

\item{preventOnFilter}{[logical] Call `event.preventDefault()` when triggered `filter`}

\item{draggable}{[string (css class)] Specifies which items inside the element should be draggable.}

\item{dataIdAttr}{[string (css class)] Defaults to"data-id".}

\item{ghostClass}{[string (css class)] Class name for the drop placeholder}

\item{chosenClass}{[string (css class)] Class name for the chosen item}

\item{dragClass}{[string (css class)] Class name for the dragging item}

\item{selectedClass}{[string (css class)] Class name for the selected item/s}

\item{swapThreshold}{[number range(0,1)]  Threshold of the swap zone.  Defaults to 1.}

\item{invertedSwapThreshold}{[number range(0,1)] Threshold of the inverted swap zone (will be set to swapThreshold value by default. Defaults to .5.}

\item{direction}{["horizontal"|"vertical"]  Direction of Sortable (will be detected automatically if not given). Defualts to "horizontal".}

\item{swap}{[logical] #// Enable swap mode. [logical]}

\item{swapClass}{[character(1)] Class name for swap item (if swap mode is enabled). Defaults to NULL.}

\item{forceFallback}{[logical] ignore the HTML5 DnD behaviour and force the fallback to kick in. Defaults to FALSE.}

\item{fallbackClass}{[character(1)] Class name for the cloned DOM Element when using forceFallback. Defaults to NULL.}

\item{fallbackOnBody}{[logical] Appends the cloned DOM Element into the Document's Body. Defaults to FALSE}

\item{fallbackTolerance}{[number], Specify in pixels how far the mouse should move before it's considered as a drag. Defaults to 0}

\item{dragoverBubble}{[logical] Defaults to FALSE.}

\item{removeCloneOnHide}{[logical] Remove the clone element when it is not showing, rather than just hiding it. Defaults to TRUE}

\item{multiDragKey}{[string] Key that must be down for items to be selected. Defaults to NULL}

\item{onChoose}{[JS] Element is choosen. Defaults to NULL.}

\item{onUnchoose}{[JS] Element is unchosen. Defaults to NULL.}

\item{onStart}{[JS]  Element dragging started. Defaults to NULL.}

\item{onEnd}{[JS] Element dragging ended. Defaults to NULL.}

\item{onAdd}{[JS] Element is dropped into the list from another list. Defaults to NULL.}

\item{onUpdate}{[JS] Changed sorting within list. Defaults to NULL.}

\item{onSort}{[JS] Called by any change to the list (add / update / remove). Defaults to NULL.}

\item{onRemove}{[JS] Element is removed from the list into another list. Defaults to NULL.}

\item{onFilter}{[JS] Attempt to drag a filtered element. Defaults to NULL.}

\item{onMove}{[JS] Called when you move an item in the list or between lists. Defaults to NULL.}

\item{onClone}{[JS] Called when creating a clone of element. Defaults to NULL.}

\item{onChange}{[JS] Called when dragging element changes position. Defaults to NULL.}

\item{onSelect}{[JS] Called when an element is selected. Defaults to NULL.}

\item{easing=}{[string]  Easing for animation. Defaults to null. See https://easings.net/ for examples. Defaults to  "cubic-bezier(1, 0, 0, 1)".}

\item{invertSwap=[logical]}{Will always use inverted swap zone if set to TRUE. Defaults to TRUE}

\item{InsertThreshold}{[number] px, distance mouse must be from empty sortable to insert drag element into it}

\item{Deselect}{[JS] Called when an element is deselected. Defaults to NULL.}
}
\value{
\code{sortable_div}: HTML
}
\description{
Create a div with sortable elements.
}
