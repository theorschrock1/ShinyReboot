% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/split_div.R
\name{split_div}
\alias{split_div}
\title{Create a div with resizable rows or columns.}
\usage{
split_div(
  ...,
  inputId = NULL,
  class = NULL,
  style = NULL,
  sizes = NULL,
  minSize = 100,
  expandToMin = FALSE,
  gutterSize = 10,
  gutterAlign = "center",
  snapOffset = 30,
  dragInterval = 1,
  direction = "horizontal",
  gutterAttrs = NULL,
  gutterFunc = NULL,
  elementStyle = NULL,
  gutterStyle = NULL,
  onDrag = NULL,
  onDragStart = NULL,
  onDragEnd = NULL
)
}
\arguments{
\item{...}{inner html (the rows to split)}

\item{inputId}{[character] the shiny inputId and id of the outer div. Defaults to NULL.  If null, a random id will be generated.}

\item{class}{[character(1)] outer div class (the rows to split)}

\item{style}{[character(1)] outer div style (the rows to split)}

\item{sizes}{[Number or Array] Initial sizes of each element in percents or CSS. Defaults to NULL}

\item{expandToMin}{[logical] Grow initial sizes to minSize Defaults to TRUE}

\item{gutterSize}{[numeric]  Gutter size in pixels. Defaults to 10.}

\item{gutterAlign}{[string]  choices: "start","center" or "end". Gutter alignment between elements. Defaults to 'center'.}

\item{snapOffset}{[numeric]  Snap to minimum size offset in pixels. Defaults to 30}

\item{dragInterval}{[numeric] Number of pixels to drag. Defaults to 1
gutterFunc=NULL,     #JS Function         Called to create each gutter element}

\item{direction}{[string]     Direction to split: horizontal or vertical. Defaults to 'horizontal'.}

\item{gutterAttrs}{[named_list(htmlTag='character(1)',class=character(1)',text='character(length(innerhtml)-1)')] Useful if gutters should contain labels}

\item{elementStyle}{[JS Function] Called to set the style of each element. Defaults to NULL}

\item{gutterStyle}{[JS Function] Called to set the style of the gutter. Defaults to NULL}

\item{onDrag}{[JS Function] Callback on drag. Defaults to NULL}

\item{onDragStart}{[JS Function] Callback on drag start. Defaults to NULL}

\item{onDragEnd}{[JS Function] Callback on drag end. Defaults to NULL}

\item{minSizes}{[Number or Array] Number or Array     Minimum size of each element. Defaults to NULL}
}
\value{
\code{split_div}: html
}
\description{
Create a div with resizable rows or columns.
}
