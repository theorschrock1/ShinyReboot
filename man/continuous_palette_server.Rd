% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/continuous_palette_server.R
\name{continuous_palette_server}
\alias{continuous_palette_server}
\title{Continuos palette module.}
\usage{
continuous_palette_server(id, settings)
}
\arguments{
\item{id}{\code{[string]}}

\item{settings}{\code{[reactive]}  list(list(unnamed = 'Must be unnamed', named = 'Must be named', unqiue = 'Names must be unique'))  The list must have the following structure: \code{list(data_range = numeric(length = 2), selected_range = numeric(NULL, len = 2),selected_values = numeric(NULL, len = 3), selected = string(), stepped = TF(NULL),n_steps = int(NULL))}.}
}
\value{
\code{continuous_palette_server}: reactiveValues['data']
}
\description{
Continuos palette module.
}
\examples{
 if (interactive()) {
 library('shiny')
 library('ShinyReboot')
 library('bslib')
 bs_global_theme()
 ui <- fluidPage(bs_theme_dependencies(theme = bs_global_get()),
 titlePanel('cont_pal module example'), uiOutput('test'))
 server <- function(input, output, session) {
 output$test = renderUI({
 continuous_palette_ui(inputId = 'mod_id', data_range = c(0,
 100))
 })
 settings = reactive({
 list(data_range = c(0, 100), selected_values = c(2,
 40, 90))
 })
 out <- continuous_palette_server(id = 'mod_id', settings = settings)
 observeEvent(out$data, {
 print(out$data)
 })
 }
 shinyApp(ui, server)
 }
}
