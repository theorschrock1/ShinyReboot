% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/splitRow.R
\name{splitRow}
\alias{splitRow}
\title{Create a row div with resizable columns.}
\usage{
splitRow(
  ...,
  inputId = NULL,
  class = "",
  style = NULL,
  sizes = NULL,
  minSizes = NULL,
  expandToMin = TRUE,
  gutterSize = 10,
  snapOffset = 30,
  dragInterval = 1
)
}
\arguments{
\item{...}{inner html (the rows to split)}

\item{inputId}{[character] the shiny inputId and id of the outer div. Defaults to NULL.  If null, a random id will be generated.}

\item{class}{[character(1)] outer div class}

\item{style}{[character(1)] outer div style}

\item{sizes}{[Number or Array] Initial sizes of each element in percents or CSS. Defaults to NULL}

\item{minSizes}{[Number or Array] Number or Array     Minimum size of each element. Defaults to NULL}

\item{expandToMin}{[logical] Grow initial sizes to minSize Defaults to TRUE}

\item{gutterSize}{[numeric]  Gutter size in pixels. Defaults to 10}

\item{snapOffset}{[numeric]  Snap to minimum size offset in pixels. Defaults to 30}

\item{dragInterval}{[numeric] Number of pixels to drag. Defaults to 1}
}
\value{
\code{splitRow}: html
}
\description{
Create a row div with resizable columns.
}
\examples{
if(interactive()){
   library("shiny")
   library("ShinyReboot")
   library("bslib")
   bs_theme_dependencies(
          theme = bs_global_get())
 bs_global_theme()
 ui <- fluidPage(bs_theme_dependencies(
          theme = bs_global_get()),

                 tags$h1("Split Div"),
                 splitRow(inputId='splitRow',style='width:100\%;',
                       splitCol(inputId='splitCol1',
                                   style='height:400px;',
                        div(class='bg-secondary',"div1"),
                        div(class='bg-secondary',"div2")
                           ),
                        splitCol(inputId='splitCol2',
                                 style='height:400px;',
                                 div(class='bg-secondary',"div1"),
                               div(class='bg-secondary',"div2")
                        )),
                 verbatimTextOutput(outputId = "res"),
                 verbatimTextOutput(outputId = "res1"),
                 verbatimTextOutput(outputId = "res2"))
 server <- function(input, output, session) {
   output$res=renderPrint({
     input$splitRow
   })
   output$res1=renderPrint({
     input$splitCol1
   })
   output$res2=renderPrint({
     input$splitCol2
   })
 }
 shinyApp(ui, server)
}
}
