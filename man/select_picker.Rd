% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select_picker.R
\name{select_picker}
\alias{select_picker}
\title{Generate a bootstrap select picker.}
\usage{
select_picker(
  inputId,
  selected = NULL,
  choices,
  multiple = FALSE,
  class = NULL,
  width = "fit",
  content_fn = default_label_fn,
  picker_size = "sm",
  picker_style = "secondary",
  borders = "normal",
  px = 2,
  py = 0,
  rounded = 0,
  icons = NULL,
  display_content = NULL,
  ...
)
}
\arguments{
\item{inputId}{[string]}

\item{selected}{[choice]  Possible values: c('choices').  NULL is ok.  Defaults to NULL}

\item{choices}{[character] Select choices}

\item{multiple}{[logical]  Allow multiple selection? Defaults to FALSE}

\item{class}{[string]  Defaults to 'btn btn-sm btn-outline-dark'}

\item{width}{[string]  Must be 'auto','fit','px' or '\%'. Defaults to 'fit'}

\item{content_fn}{[function] A function to create the display content. Can return
strings or html.  Defaults to a function that replaces underscores '_' with spaces and
capitalizes each option.}

\item{...}{Additional HTML attributes}
}
\value{
select_picker: HTML
}
\description{
Generate a bootstrap select picker.
}
\examples{
 if (interactive()) {
 library('shiny')
 library('ShinyReboot')
 bs_global_theme()
 ui <- fluidPage(bs_dependencies(theme = bs_global_get()),
 tags$head(reboot_Dependancies()), tags$h1('select_picker'),
 select_picker(inputId = 'select_picker', choices = letters[1:5]),
 verbatimTextOutput(outputId = 'res'))
 server <- function(input, output, session) {
 output$res <- renderPrint(input[['select_picker']])
 }
 shinyApp(ui, server)
 }
 if (interactive()) {
 library('shiny')
library('ShinyReboot')
 bs_global_theme()
 ui <- fluidPage(
   bs_dependencies(theme = bs_global_get()),
   tags$head(reboot_Dependancies()),
   tags$h1('select_picker'),
   uiOutput("picker"),
   verbatimTextOutput(outputId = 'res')
 )
 server <- function(input, output, session) {
   output$picker=renderUI({

     select_picker(inputId = 'select_picker', choices = letters[1:5])
   })
   output$res <- renderPrint(input[['select_picker']])
 }
 shinyApp(ui, server)
 }
}
