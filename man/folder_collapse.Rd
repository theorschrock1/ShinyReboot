% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/folder_collapse.R
\name{folder_collapse}
\alias{folder_collapse}
\title{Create a collapsible folder.}
\usage{
folder_collapse(
  ...,
  inputId,
  label,
  open = FALSE,
  open_icon = "folder-open",
  closed_icon = "folder"
)
}
\arguments{
\item{inputId}{\code{[string]}}

\item{label}{\code{[string]}  NULL is ok.}

\item{open}{\code{[logical]}  Must have an exact length of \code{1}.  Defaults to \code{FALSE}}

\item{open_icon}{\code{[string]}  NULL is ok.  Defaults to \code{'folder-outline'}}

\item{closed_icon}{\code{[string]}  NULL is ok.  Defaults to \code{'folder-open-outline'}}
}
\value{
\code{folder_collapse}: \code{[html]}
}
\description{
Create a collapsible folder.
}
\examples{
 folder_collapse(inputId = 'myid', label = 'folder1', div('one'),
 div('two'))

 if(interactive()){
 library("shiny")
 library("ShinyReboot")
 library("bslib")
 bs_global_theme()
 ui <- fluidPage(
 bs_theme_dependencies(theme = bs_global_get()),

 tags$h1("Icon Toggle"),
 folder_collapse(inputId='myid',label='folder1',div('one'),div('two'))
 )

 server = function(input, output, session) {

 output$res<-renderText({
 input$myid
 })
 }
 shinyApp(ui = ui, server = server)
 }

}
