% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/toggleSwitch.R
\name{toggleSwitch}
\alias{toggleSwitch}
\title{Generate a BS4 toggle switch.}
\usage{
toggleSwitch(
  inputId,
  label = NULL,
  value = FALSE,
  class = NULL,
  color_checked = "primary",
  color_unchecked = "gray",
  knob_color_checked = NULL,
  knob_color_unchecked = NULL
)
}
\arguments{
\item{inputId}{[string]}

\item{label}{[string]  NULL is ok.  Defaults to NULL}

\item{value}{[logical] The value of the toggle.}

\item{class}{[string]  NULL is ok.  Defaults to NULL}

\item{color_checked}{[string]  Defaults to 'primary'}

\item{color_unchecked}{[string]  Defaults to 'gray'}

\item{knob_color_checked}{[string]  NULL is ok.  Defaults to NULL}

\item{knob_color_unchecked}{[string]  NULL is ok.  Defaults to NULL}
}
\value{
\code{toggleSwitch}: HTML
}
\description{
Generate a BS4 toggle switch.
}
\examples{
 if (interactive()) {
 library('shiny')
 library('ShinyReboot')
 library('bootstraplib')
 bs_global_theme()
 ui <- fluidPage(bs_dependencies(theme = bs_global_get()),
 tags$head(), tags$h1('toggle_switch'), uiOutput('widget'),
 actionButton('false', 'set to FALSE'), verbatimTextOutput(outputId = 'res'))
 server <- function(input, output, session) {
 output$res <- renderPrint(input$myId)
 output$widget <- renderUI({
 toggleSwitch(inputId = 'myId', label = 'A toggle',
 color_checked = 'dark')
 })
 observeEvent(input$false, {
 updateCheckboxInput(session, 'myId', value = FALSE)
 })
 }
 shinyApp(ui, server)
 }
}
